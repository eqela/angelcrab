
/*
 * This file is part of Angel Crab
 * Copyright (c) 2016 Job and Esther Technologies, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is SpriteEntity imports motion imports cape:

var movex private as double
var movey private as double
var center private as double
var speed private = 0.006
var gameScene as GameScene
var sceneWidth as double
var bird as TextureSprite

func create(startx as double, starty as double) static as this
{
	var v = new this()
	v.movex = startx
	v.movey = starty
	return(v)
}

func createSprite override as Sprite
{
	sceneWidth = layer.getReferenceWidth()
	var txt = scene.createTextureForImageResource("dead_bird")
	bird = SpriteUtil.addTextureSpriteForWidth(scene, layer, txt, 0.1 * layer.getReferenceHeight())
	center = bird.getWidth() * 0.5
	bird.move(movex, movey)
	gameScene = scene as GameScene
	return(bird)
}

func tick(gameTime as TimeValue, delta as double) override
{
	base.tick(gameTime, delta)
	movey -= speed
	bird.move(movex, movey)
	if(movey + bird.getWidth() < 0.0 || movex > sceneWidth) {
		if(gameScene != null) {
			gameScene.removeEntity(this)
		}
	}
}
