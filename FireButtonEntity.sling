
/*
 * This file is part of Angel Crab
 * Copyright (c) 2016 Job and Esther Technologies, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is SpriteEntity is PointerListener imports motion imports cape imports cave:

var gameScene as GameScene
var movex as double
var movey as double
var pressed = false
var btnSprite as TextureSprite
var txtNormal as Texture
var txtPress as Texture

func createSprite override as Sprite
{
	txtNormal = scene.createTextureForImageResource("fire_button_normal")
	var img = scene.createImageFromResource("fire_button_press")
	txtPress = scene.createTextureForImage(img)
	btnSprite = SpriteUtil.addTextureSpriteForWidth(scene, layer, txtNormal, 0.21 * layer.getReferenceHeight())
	movex = layer.getReferenceWidth() - (btnSprite.getWidth()*1.2)
	movey = layer.getReferenceHeight() - btnSprite.getHeight()
	btnSprite.move(movex, movey)
	gameScene = scene as GameScene
	return(btnSprite)
}

func onPointerEvent(event as PointerEvent) as bool
{
	if(event.action == PointerEvent.DOWN && event.isConsumed == false) {
		if(event.isInside(btnSprite.getX(), btnSprite.getY(), btnSprite.getWidth(), btnSprite.getHeight())) {
			pressed = true
			onPressedChanged()
		}
	}
	else if(event.action == PointerEvent.UP) {
		pressed = false
		onPressedChanged()
	}
	return(false)
}

func onPressedChanged
{
	if(pressed) {
		btnSprite.setTexture(txtPress)
		gameScene.fireBubble()
	}
	else {
		btnSprite.setTexture(txtNormal)
	}
}